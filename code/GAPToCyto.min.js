const letters=[...Array(52).keys()].map(i=>String.fromCharCode(97+i%26+(i<26?0:-32)));var QuiverData,cy,Relations;function infLetters(i){var res=letters[i%52];return res+=Array(parseInt(i/52+1)).fill("").reduce((prev,curr)=>prev+"^")}const primes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61],gens=[1,2,2,3,2,2,3,2,5,2,3,2,6,3,5,2,2,2];function isPowerOfPrime(x){for(let p of primes){if(x==p)return[p,1];let logp=Math.log(x)/Math.log(p);if(logp%1==0)return[p,logp]}return console.log(`Cannot find ${x} as a power of prime less than 62`),[0,0]}function findFieldChar(str){return"Z"==str[1]?isPowerOfPrime(parseInt(str.slice(3,str.indexOf(")"))))[0]:0}function getCpxNum(str){return-1!=str.indexOf("/")?str:-1!=str.indexOf(".")?str:-1!=str.indexOf("i")?str:-1!=str.indexOf("(")?str.slice(1,-1):str}function translateScalar(a,char){if(-1==char)return a;if(0==char){var res=getCpxNum(a);return"("!=res[0]?"1"==res?"":"-1"==res?"-":res:res}var hasExpo=a.indexOf("^"),expo=-1!=hasExpo?a.slice(hasExpo+1,-1):1;if(0==expo)return"";var result=Math.pow(gens[primes.indexOf(char)],parseInt(expo));return result==char-1?"-":result}const pa=msg=>{document.getElementById("outTxtBox").innerHTML=`<span style='color:red; font-size: 20pt'>${msg}</span>`},stripLineBreaksAndSpaces=str=>str.replace(/(\\\r\n|\\\r|\\\n)/,"").replace(/\s+/g,""),matchDeepestBrackets=str=>str.match(/\[([^\[\]])*\]/g);function detectRelation(str){let deepest=matchDeepestBrackets(str),s=str.search(/\[\s*\[/),t=str.search(/\]\s*\]/),m=matchDeepestBrackets(str.slice(s+1,t+str.match(/\]\s*\]/)[0].length-1)).length;return s=deepest.length-m==2?str.search(/\[([^\[\]])*\]\s*$/):str.length,[str.slice(0,s),str.slice(s)]}function translateQPA(){var[quiverIn,relationStr]=detectRelation(document.getElementById("inQuiver").value);if("["!=(quiverIn=(quiverIn=(quiverIn=(quiverIn=stripLineBreaksAndSpaces(quiverIn)).replace(/;/g,"")).replace(/^(\s*)Quiver(\(*)/,"")).replace(/\)(\s*)$/,""))[0]){let numVx=parseInt(quiverIn.split(",",1));if(numVx>0){let arrv=Array.from({length:numVx},(_,i)=>i+1);quiverIn=JSON.stringify(arrv)+quiverIn.slice(quiverIn.indexOf(","))}else console.log("not a number before first comma")}quiverIn="["+quiverIn+"]";var quiverQPA=JSON.parse(quiverIn);if(quiverQPA[0].length>100)return pa("More than 100 vertices! Abort translation."),void clearAll();var forceID=document.getElementById("forceID").checked,vxQPA,vx=quiverQPA[0].map((v,i)=>forceID?i+1:`${v}`.replace(/"/g,"")).map(v=>({data:{id:v}})),arr=quiverQPA[1].map((ar,i)=>{var idlabel=document.getElementById("forceArrow").checked?infLetters(i):ar[2],core;return{data:{id:idlabel,source:forceID?quiverQPA[0].indexOf(ar[0])+1:ar[0],target:forceID?quiverQPA[0].indexOf(ar[1])+1:ar[1],label:idlabel}}});const quiverData={nodes:vx,edges:arr};relationStr=""===relationStr?document.getElementById("inRelation").value:relationStr,document.getElementById("inRelation").value=relationStr;var arrRelns=relationStr.replace(/(\\\r\n|\\\r|\\\n)/g,"").replace(/[\s\[\]]/g,"").split(","),arrRef=quiverQPA[1].map(entry=>entry[2]),charFound=-1,relData=[];for(let rel of arrRelns){let readIndex=0,monomials=rel.split(/[\+-]/),newRel="",reldataentry=Array(monomials.length).fill({scalar:1,monomials:[],originalIdx:0});for(let i=0;i<monomials.length;i++){reldataentry[i].originalIdx=i;let factors=monomials[i].split("*"),arrInMon=[],scalar="1";"("!=factors[0][0]&&arr.find(({data:data})=>data.id==factors[0])?arrInMon=factors:(scalar=factors[0],arrInMon=factors.slice(1)),-1==charFound&&(charFound=findFieldChar(scalar),document.getElementById("controlOutput").innerHTML=`Detected characteristic as ${-1!=charFound?charFound:"unknown"}.`),scalar=translateScalar(scalar,charFound),reldataentry[i].scalar=scalar;let newMono=arrInMon.map(x=>{let q=arrRef.indexOf(x),arr=-1!=q&&document.getElementById("forceArrow").checked?infLetters(q):x;return reldataentry[i].monomials.push(arr),arr}).join("·");readIndex+=monomials[i].length,newMono+=i+1==monomials.length?"":rel[readIndex],newRel+=""==scalar?newMono:"-"==scalar?`-${newMono}`:`${scalar}·${newMono}`,readIndex++}relData.push({reln:newRel,terms:reldataentry})}relData.sort(sortReln),QuiverData=quiverData,Relations=relData,presentData(quiverData,relData)}function presentData(quiver,relations,isPreset=!1){let outputDiv=document.getElementById("sysOutput");outputDiv.innerHTML="Relations:<br>";for(let i=0;i<relations.length;i++){let divElt=document.createElement("div");divElt.classList.add("relationRow"),divElt.setAttribute("id",relations[i].reln),divElt.innerHTML=relations[i].reln,divElt.addEventListener("click",()=>{selectNthRelation(i)}),outputDiv.appendChild(divElt)}document.getElementById("saveSVG").disabled=!1,document.getElementById("fixCyto").disabled=!1,cy=initCyto(quiver,isPreset)}function composeCompares(compfuncs,a,b){let c;return range(compfuncs.length).map(i=>compfuncs[i](a[i],b[i])).reduce((accum,curr)=>accum||curr)}const positiveCoeffFirst=(x,y)=>x.scalar>0?y.scalar>0?0:-1:1,increasingMonomialLength=(x,y)=>x.monomials.length-y.monomials.length,increasingNumOfTerms=(r1,r2)=>r1.terms.length-r2.terms.length,monomialWithPositiveCoeffFirst=(r1,r2)=>1==r1.terms.length&&1==r2.terms.length?positiveCoeffFirst(r1.terms[0],r2.terms[0]):increasingNumOfTerms(r1,r2);function sortReln(a,b){return monomialWithPositiveCoeffFirst(a,b)}function selectNthRelation(n){let rows=document.querySelectorAll("#sysOutput div");for(const e of cy.edges())e.style(coloredEdgeStyle("#000"));for(let i=0;i<rows.length;i++)if(i==n){rows[i].classList.add("selectedRelationRow");for(const t of Relations[i].terms)for(const m of t.monomials)cy.edges(`[id="${m}"]`).style(coloredEdgeStyle(i%2==0?"#ff6f00":"#0080ff"))}else rows[i].classList.remove("selectedRelationRow")}const coloredEdgeStyle=color=>({width:2,"line-color":color,"target-arrow-color":color,"target-arrow-shape":"triangle","curve-style":"bezier","loop-direction":"0deg","loop-sweep":"45deg"});function initCyto(inputData,isPreset=!1){let layout=isPreset?{name:"preset"}:{name:"breadthfirst",fit:!0,padding:20,nodeDimensionsIncludeLabels:!0};return cytoscape({container:document.getElementById("cy"),elements:inputData,style:[{selector:"node",css:{width:25,height:25,shape:"ellipse","background-color":"#ffffff","border-width":"1px","border-style":"solid","border-color":"#000",content:"data(id)","text-valign":"center","text-halign":"center"}},{selector:"node:selected",style:{"background-color":"#fa5252",width:30,height:30}},{selector:"edge",style:coloredEdgeStyle("#000")},{selector:"edge:selected",style:coloredEdgeStyle("#7379f4")},{selector:"edge[label]",style:{label:"data(label)",color:"#ff1818","font-size":"22pt","font-weight":"bold","text-outline-color":"#ee0","text-outline-width":2}}],layout:layout,selectionType:"single",userZoomingEnabled:!0,userPanningEnabled:!0,wheelSensitivity:.5,pan:{x:40,y:40}})}function bendArrow(dir){let edges=cy.$("edge:selected");for(let e of edges){let strCurrDist=e.style("control-point-distance"),dist=0;switch(dir){case"L":dist=-40;break;case"R":dist=40;break;case"S":dist=0}if(console.log(strCurrDist),strCurrDist){let currDist=parseInt(strCurrDist.substring(0,strCurrDist.indexOf("px")));currDist>=0&&dist>0||currDist<=0&&dist<0?e.style("control-point-distance",currDist+dist):e.style("control-point-distance",0),e.style("control-point-weights",.5)}else e.style("control-point-weights",.5),e.style("control-point-distance",dist);1==e.codirectedEdges().length&&e.style("curve-style","unbundled-bezier")}}function clearAll(){document.getElementById("inQuiver").value="",document.getElementById("inRelation").value="",document.getElementById("fixCyto").disabled=!0,document.getElementById("saveSVG").disabled=!0}function savefile(type){var content,blob,fn;switch(type){case"svg":content=cy.svg({scale:1,full:!0,bg:"#ffffff"}),blob=new Blob([content],{type:"image/svg+xml;charset=utf-8"});break;case"json":content={cy:cy.json(),reln:Relations},console.log(JSON.stringify(content)),blob=new Blob([JSON.stringify(content)],{type:"application/json;charset=utf-8"});break;default:console.log("Invalid filetype")}saveAs(blob,document.getElementById("filenameInput").value+"."+type)}document.getElementById("bendLeft").addEventListener("click",()=>bendArrow("L")),document.getElementById("bendRight").addEventListener("click",()=>bendArrow("R")),document.getElementById("fixCyto").addEventListener("click",()=>cy.fit()),document.getElementById("saveSVG").addEventListener("click",()=>savefile("svg")),document.getElementById("saveJSON").addEventListener("click",()=>savefile("json")),document.getElementById("loadJsonBtn").addEventListener("change",event=>{let reader=new FileReader;reader.addEventListener("load",()=>{let res=JSON.parse(reader.result);presentData(res.cy.elements,res.reln,!0)},!1),reader.readAsText(event.target.files[0])}),document.getElementById("translateBtn").addEventListener("click",()=>translateQPA()),document.getElementById("btnUnselectRelns").addEventListener("click",()=>selectNthRelation(-1));